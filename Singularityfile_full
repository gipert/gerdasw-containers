# Singularityfile for containers with the gerda software
#
# Author: luigi.pertoldi@pd.infn.it
# Created: 4 Nov 2017
#
# NOTES: Please build the container from within the folder of this file

BootStrap: docker
From: centos:7

# ==> Global

%labels
    MANTAINER luigi.pertoldi@pd.infn.it
    SOURCE_REPO https://github.com/luigipertoldi/gerdasw-containers

%post
    yum update -y
    yum groupinstall -y "Development Tools"
    yum install -y htop zsh vim wget cmake \
        expat-devel xerces-c-devel fftw-devel \
        libXmu-devel libXi-devel libX11-devel libXext-devel libXft-devel libXpm-devel \
        libzip-devel mesa-libGLU-devel \
        libjpeg-devel libpng-devel
    yum clean all

%runscript
    if [ $# -eq 0 ]; then
        echo -e "\nThe following software is installed in this image:\n"
        ls /scif/apps | sort -u --ignore-case
        echo -e "\nExample usage:\n\n    $ singularity run --app <app-name> <image>\n"
        echo -e "Run 'singularity help' for other singularity commands.\n"
    else
        exec "$@"
    fi

%help
>
> This container includes a basic installation of the GERDA software, run
>
>     $ singularity apps <container>
>
> to see what's included! For specific help use the --app flag.
>

%files
    MGDO       /scif/src/MGDO
    GELATIO    /scif/src/GELATIO
    databricxx /scif/src/databricxx
    gerda-ada  /scif/src/gerda-ada
    MaGe       /scif/src/MaGe

#############
# ROOT CERN #
#############

%apphelp root
    >
    > ROOT - Data Analysis Framework (https://root.cern.ch)
    >
    > Precompiled version for CentOS Cern 7 gcc4.8
    > release web page: https://root.cern.ch/content/release-60608
    >
    > To launch a ROOT session:
    > $ singularity --app root <image>
    >

%appenv root
    export ROOTSYS="/scif/apps/root"
    export MANPATH="$ROOTSYS/man:$MANPATH"
    export PYTHONPATH="$ROOTSYS/lib:$PYTHONPATH"

%apprun root
    root -l

%appinstall root
    wget -O- https://root.cern.ch/download/root_v6.06.08.Linux-centos7-x86_64-gcc4.8.tar.gz | tar --strip-components 1 -xz -C $SINGULARITY_APPROOT

%applabels root
    root-version 6.06.08

#########
# CLHEP #
#########

%appenv clhep
    export CLHEP_BASE_DIR="/scif/apps/clhep"
    export CLHEP_INCLUDE_DIR="/scif/apps/clhep/include"
    export CLHEP_LIB_DIR="/scif/apps/clhep/lib"

%appinstall clhep
     mkdir -p /scif/src/clhep-src
     wget -O- http://proj-clhep.web.cern.ch/proj-clhep/DISTRIBUTION/tarFiles/clhep-2.1.3.1.tgz | tar --strip-components 2 -xz -C /scif/src/clhep-src
     mkdir -p /scif/src/clhep-build && cd /scif/src/clhep-build
     cmake -DCMAKE_INSTALL_PREFIX="$SINGULARITY_APPROOT" \
         -DCMAKE_CXX_FLAGS=-std=c++11 \
         /scif/src/clhep-src
     cmake --build . -- -j"$(nproc)" && make install
     cd .. && rm -rf /scif/src/clhep-src /scif/src/clhep-build

%applabels clhep
    clhep-version 2.1.3.1

##########
# GEANT4 #
##########

%appenv geant4
    export LD_LIBRARY_PATH="/scif/apps/geant4/lib64:/scif/apps/clhep/lib:$LD_LIBRARY_PATH"
    export G4LEDATA="/scif/apps/geant4/share/Geant4-9.6.4/data/G4EMLOW6.32"
    export G4LEVELGAMMADATA="/scif/apps/geant4/share/Geant4-9.6.4/data/PhotonEvaporation2.3"
    export G4NEUTRONHPDATA="/scif/apps/geant4/share/Geant4-9.6.4/data/G4NDL4.2"
    export G4NEUTRONXSDATA="/scif/apps/geant4/share/Geant4-9.6.4/data/G4NEUTRONXS1.2"
    export G4PIIDATA="/scif/apps/geant4/share/Geant4-9.6.4/data/G4PII1.3"
    export G4RADIOACTIVEDATA="/scif/apps/geant4/share/Geant4-9.6.4/data/RadioactiveDecay3.6"
    export G4REALSURFACEDATA="/scif/apps/geant4/share/Geant4-9.6.4/data/RealSurface1.0"
    export G4SAIDXSDATA="/scif/apps/geant4/share/Geant4-9.6.4/data/G4SAIDDATA1.1"

%appinstall geant4
    mkdir -p /scif/src/geant4-src
    wget -O- https://geant4.web.cern.ch/geant4/support/source/geant4.9.6.p04.tar.gz | tar --strip-components 1 -xz -C /scif/src/geant4-src
    mkdir -p /scif/src/geant4-build && cd /scif/src/geant4-build
    cmake -DCMAKE_INSTALL_PREFIX="$SINGULARITY_APPROOT" \
        -DGEANT4_BUILD_CXXSTD=c++11 \
        -DGEANT4_USE_SYSTEM_CLHEP=ON \
        -DCLHEP_ROOT_DIR="/scif/apps/clhep" \
        -DGEANT4_USE_GDML=ON \
        -DGEANT4_USE_OPENGL_X11=ON \
        -DGEANT4_USE_RAYTRACER_X11=ON \
        -DGEANT4_INSTALL_DATA=ON \
        --fail-on-missing \
        /scif/src/geant4-src
    cmake --build . -- -j"$(nproc)" && make install
    cd .. && rm -rf /scif/src/geant4-src /scif/src/geant4-build

%applabels geant4
    geant4-version 9.6.p04

########
# MGDO #
########

%apphelp MGDO
    >
    > MGDO - Majorana GERDA Data Objects (https://github.com/mppmu/mgdo)
    >
    > To list the available executables run:
    > $ singularity exec --app MGDO <image> ls /scif/apps/MGDO/bin/
    >
    > To load MGDO classes in a ROOT session do:
    > root [0] .x $MGDODIR/Gerda/LoadMGDOGEClasses.C
    >

%appenv MGDO
    export LD_LIBRARY_PATH="/scif/apps/root/lib:/scif/apps/clhep/lib:$LD_LIBRARY_PATH"
    export MGDODIR="/scif/src/MGDO"

%appinstall MGDO
    cd /scif/src/MGDO
    ./configure --enable-tam --enable-streamers \
        CXXFLAGS='-std=c++11' \
        --with-clhep="/scif/apps/clhep" \
        --with-rootsys="/scif/apps/root" \
        --prefix="$SINGULARITY_APPROOT"
    make -j"$(nproc)" -k || true
    make -j"$(nproc)" -k || true
    make -j"$(nproc)" -k || true
    make && make install

%applabels MGDO
    MGDO-tag v2.06
    MGDO-branch master
    MGDO-commit 44f363d0

###########
# GELATIO #
###########

%apphelp GELATIO
    >
    > GELATIO - GERDA analysis package (https://github.com/mppmu/gelatio)
    >
    > To list the available executables run:
    > $ singularity exec --app GELATIO <image> ls /scif/apps/GELATIO/bin/
    >
    > To load GELATIO classes inside a ROOT session do:
    > root [0] .x $GELATIODIR/Utilities/LoadGELATIOUtilities.C
    >

%appenv GELATIO
    export LD_LIBRARY_PATH="/scif/apps/root/lib:/scif/apps/clhep/lib:/scif/apps/MGDO/lib:$LD_LIBRARY_PATH"
    export GELATIODIR="/scif/src/GELATIO"
    export MU_CAL="/common/sw-other/gerda-metadata/config/_aux/geruncfg"

%appinstall GELATIO
    cd /scif/src/GELATIO
    ./configure --prefix="$SINGULARITY_APPROOT" \
        CXXFLAGS='-std=c++11' \
        --with-clhep="/scif/apps/clhep" \
        --with-rootsys="/scif/apps/root" \
        --with-mgdo="/scif/apps/MGDO"
    make -j"$(nproc)" -k || true
    make -j"$(nproc)" -k || true
    make -j"$(nproc)" -k || true
    make && make install

%applabels GELATIO
    GELATIO-tag v04.03
    GELATIO-branch master
    GELATIO-commit be58c54f

##############
# DataBriCxx #
##############

%apphelp databricxx
    >
    > DatABriCxx - Modular C++11/ROOT-6 Data Analysis Framework (https://github.com/databricxx/databricxx)
    > dependency for GERDA-ADA
    >
    > To list the available executables run:
    > $ singularity exec --app databricxx <image> ls /scif/apps/databricxx/bin/
    >

%appenv databricxx
    export LD_LIBRARY_PATH="/scif/apps/root/lib:$LD_LIBRARY_PATH"

%appinstall databricxx
    cd /scif/src/databricxx
    ./autogen.sh
    ./configure --prefix="$SINGULARITY_APPROOT" \
        CXXFLAGS='-std=c++11' \
        --with-rootsys="/scif/apps/root"
    make -j"$(nproc)" && make install
    rm -rf /scif/src/databricxx

%applabels databricxx
    databricxx-branch master
    databricxx-commit 4263040b

#############
# GERDA-ada #
#############

%apphelp gerda-ada
    >
    > GERDA-ADA - GERDA Advanced Data Analysis Package (https://github.com/mppmu/gerda-ada)
    >
    > To list the available executables run:
    > $ singularity exec --app gerda-ada <image> ls /scif/apps/gerda-ada/bin/
    >

%appenv gerda-ada
    export LD_LIBRARY_PATH="/scif/apps/root/lib:/scif/apps/clhep/lib:/scif/apps/MGDO/lib:/scif/apps/GELATIO/lib:/scif/apps/databricxx/lib:$LD_LIBRARY_PATH"

%appinstall gerda-ada
    export PATH="/scif/apps/clhep/bin:/scif/apps/MGDO/bin:/scif/apps/GELATIO/bin:/scif/apps/databricxx/bin:$PATH"
    cd /scif/src/gerda-ada
    ./autogen.sh
    ./configure --prefix="$SINGULARITY_APPROOT" \
        CXXFLAGS='-std=c++11' \
        --with-rootsys="/scif/apps/root"
    make -j"$(nproc)" && make install
    rm -rf /scif/src/gerda-ada

%applabels gerda-ada
    gerda-ada-branch master
    gerda-ada-commit eef1247c

########
# MaGe #
########

%apphelp MaGe
    >
    > MaGe - Majorana GERDA Simulation software (https://github.com/mppmu/mage)
    >
    > To list the available executables run:
    >     $ singularity exec --app MaGe <image> ls /scif/apps/MaGe/bin/
    >
    > A 'singularity --app MaGe <image>' command launches an interactive MaGe session, to use a macro
    > file use the command
    >     $ singularity exec --app MaGe <image> MaGe <macro_file>
    > and be sure to put your macro file in a location which is visible to the container.
    >
    > The two MGGENERATORDATA and MGGERDAGEOMETRY variables needed to MaGe currently point to
    >
    >    MGGERDAGEOMETRY="/common/sw-other/gerdageometry"
    >    MGGENERATORDATA="/common/sw-other/gerda-ana-sandbox/BackgroundModel/MaGe_Datafiles"
    >
    > so be sure to have mounted the requested folder structure under /common appending the
    > "--bind /path/to/src/:/common" to your singularity command. The 'gerdageometry' folder
    > ships with the MaGe source code, while the 'gerda-ada-sandbox' folder can be cloned from
    > https://github.com/mppmu/gerda-ada-sandbox.
    >

%appenv MaGe
    export LD_LIBRARY_PATH="/scif/apps/root/lib:/scif/apps/clhep/lib:/scif/apps/geant4/lib:/scif/apps/geant4/lib64:/scif/apps/MGDO/lib:$LD_LIBRARY_PATH"
    export MGGERDAGEOMETRY="/common/sw-other/gerdageometry"
    export MGGENERATORDATA="/common/sw-other/gerda-ana-sandbox/BackgroundModel/MaGe_Datafiles"

%apprun MaGe
    MaGe

%appinstall MaGe
    export PATH="/scif/apps/clhep/bin:/scif/apps/geant4/bin:$PATH"
    cd /scif/src/MaGe
    ./configure --prefix="$SINGULARITY_APPROOT" \
        CXXFLAGS='-std=c++11' \
        --with-rootsys="/scif/apps/root" \
        --with-mgdo="/scif/apps/MGDO" \
        --enable-g4gdml
    make -j"$(nproc)" -k || true
    make -j"$(nproc)" -k || true
    make -j"$(nproc)" -k || true
    make && make install
    rm -rf /scif/src/MaGe

%applabels MaGe
    MaGe-branch GERDAPhaseII
    MaGe-commit e9e38288

#####################
# GERDA-ana-sandbox #
#####################

%apphelp gerda-ana-sandbox
    >
    > The gerda-ana-sandbox repository is not included in this image, this app only sets the environment.
    > The GERDA_ANA_SANDBOX variable points to '/common/sw-other/gerda-ana-sandbox', so be sure
    > to have downloaded the repository on your PC and mounted on the singularity containter with
    > the requested folder structure.
    >

%appenv gerda-ana-sandbox
    export GERDA_ANA_SANDBOX="/common/sw-other/gerda-ana-sandbox"
